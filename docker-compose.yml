version: "3.9"

networks:
  mesh-network:

services:
  app:
    build: ./docker/nginx
    container_name: nginx
    ports:
      - 8000:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - mesh-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - mesh-network
    entrypoint: sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS ${MYSQL_DATABASE};' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"

  php:
    build: ./docker/php
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - mesh-network

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - mesh-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: local
    volumes:
      - ./docker/rabbitmq/logs:/var/log/rabbitmq/log
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mesh-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - mesh-network
